import { Token } from "./../types/chain";
import { IChainConfig } from "../types/chain";
export default class Chain {
    private static configs;
    static fill(configList: Array<IChainConfig>): IChainConfig[];
    static getAllChains(): IChainConfig[];
    /**
     * @deprecated
     * @param chainId chainId
     * @param tokenAddress  token Address
     * @returns Chain Config
     */
    static getTokenByAddress(chainId: string, tokenAddress: string): Token | undefined;
    private static getInjectChain;
    /**
     * [Network Chain] Get Network All Chain Config
     * @returns ALL Chain Config
     */
    static getPubChains(): Array<any>;
    /**
     * [Network Chain] Get Network All Chain Config
     * @param chainId  chainId
     * @returns Chain Config
     */
    static getPubChainInfo(chainId: string): any;
    /**
     * [Network Chain] Get Network All Chain Config
     * @param name  chain name
     * @returns Chain Config
     */
    static getPubChainInfoByName(name: string): any;
    /**
     * Get the injected public chain configuration according to the platform internal ID
     * @param internalId ID
     * @returns IChainConfig
     */
    static getChainByInternalId(internalId: IChainConfig["internalId"]): IChainConfig;
    /**
     * Get By Chain Main Token
     * @param chainId chainId
     * @returns Main Token Address
     */
    static getChainMainToken(chainId: string): string;
    /**
     * Valid is MainToken
     * @param chainId chainId
     * @param tokenAddress tokenAddress
     * @returns is MainToken true | false
     */
    static inValidMainToken(chainId: string, tokenAddress: string): boolean;
    static inValidInternalId(internalId: IChainConfig["internalId"]): boolean;
    /**
     * Get the injected public chain configuration according to the platform Chain ID
     * @param internalId ID
     * @returns IChainConfig
     */
    static getChainByChainId(chainId: IChainConfig["chainId"]): IChainConfig;
    private static getChainByKeyValue;
    /**
     * @deprecated
     */
    static getChainByNetworkId(networkId: IChainConfig["networkId"]): IChainConfig;
}
