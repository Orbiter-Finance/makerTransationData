export interface EtherscanAPIResponse {
    message: "NOTOK" | "OK";
    result: any;
    status: "1" | "0";
}
interface Input {
    readonly name: string;
    readonly type: string;
    readonly indexed?: boolean;
}
interface Output {
    readonly name: string;
    readonly type: string;
}
export interface Tuple extends Output {
    readonly type: "tuple";
    readonly components: ReadonlyArray<Output>;
}
interface ContractMember {
    readonly constant?: boolean;
    readonly inputs?: ReadonlyArray<Input>;
    readonly name?: string;
    readonly outputs?: ReadonlyArray<Output | Tuple>;
    readonly type: string;
    readonly payable?: boolean;
    readonly stateMutability?: string;
    readonly anonymous?: boolean;
}
export declare type ContractABI = ReadonlyArray<ContractMember>;
export declare enum EtherscanApiAction {
    AccountBalance = "account_balance",
    AccountBalancemulti = "account_balancemulti",
    AccountTxlist = "account_txlist",
    AccountTxlistinternal = "account_txlistinternal",
    AccountTokentx = "account_tokentx",
    AccountGetminedblocks = "account_getminedblocks",
    ContractGetAbi = "contract_getabi",
    TransactionGetstatus = "transaction_getstatus",
    TransactionGettxreceiptstatus = "transaction_gettxreceiptstatus",
    BlockGetblockreward = "block_getblockreward",
    LogsGetLogs = "logs_getLogs",
    StatsEthsupply = "stats_ethsupply",
    StatsEthprice = "stats_ethprice"
}
/**
 * This is the default export of the library, a client that can be constructed for interacting with the
 * Etherscan API.
 */
export default class EtherscanClient {
    private readonly apiUrl;
    private readonly apiKey?;
    private readonly debug?;
    private readonly maxRequestsPerSecond;
    private lastRequestTime;
    constructor(apiUrl: string, opts?: Partial<{
        apiKey: string;
        maxRequestsPerSecond: number;
        debug: boolean;
    }>);
    getAbi(address: string): Promise<ContractABI | null>;
    call(actionEnum: EtherscanApiAction, params?: {
        [key: string]: string | number | boolean | undefined;
    }): Promise<EtherscanAPIResponse>;
    private throttle;
}
export {};
