import BigNumber from "bignumber.js";
import * as starknet from "starknet";
import { IChain, IChainConfig, QueryTransactionsResponse, QueryTxFilter, TokeBalanceResponse, Transaction } from "../types";
export declare class Starknet implements IChain {
    readonly chainConfig: IChainConfig;
    provider: starknet.Provider;
    constructor(chainConfig: IChainConfig);
    getTokenInfo(idOrAddrsss: string | number): Promise<import("../types").Token | null>;
    getLatestHeight(): Promise<number>;
    getTransactionByHash(hash: string): Promise<Transaction | null>;
    getTransactions(address: string, filter: Partial<QueryTxFilter>): Promise<QueryTransactionsResponse>;
    getTokenTransactions(address: string, contractAddress: string | null, filter: Partial<QueryTxFilter>): Promise<QueryTransactionsResponse>;
    getBalance(address: string): Promise<BigNumber>;
    getBalances(address: string): Promise<TokeBalanceResponse[]>;
    getDecimals(): Promise<number>;
    getTokenBalance(address: string, tokenAddress: string): Promise<BigNumber>;
    getTokenDecimals(tokenAddress: string): Promise<number>;
    getTokenSymbol(tokenAddress: string): Promise<string>;
}
