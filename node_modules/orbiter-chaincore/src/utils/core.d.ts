/// <reference types="lodash" />
export declare function sleep(ms: number): Promise<unknown>;
export declare function equals<T, U extends T>(val1: T, val2: U, ignoreCase?: boolean): boolean;
export declare function oldMarketConvertScanChainConfig(makerList: Array<any>): import("lodash").Dictionary<{
    intranetId: string;
    address: string;
}[]>;
export declare function fix0xPadStartAddress(address: string, length: number): string;
export declare function isObject(obj: any): boolean;
export declare function isString(obj: any): boolean;
export declare function isFunction(obj: any): boolean;
export declare function isNumberString(obj: any): boolean;
export declare function isNumber(obj: any): boolean;
export declare function isBoolean(obj: any): boolean;
export declare function isEmpty(obj: any): boolean;
export { groupBy, orderBy, maxBy, uniqBy, padStart, flatten, uniq, } from "lodash";
