import BigNumber from "bignumber.js";
import { HashOrBlockNumber, IChain, IChainConfig, QueryTransactionsResponse, QueryTxFilter, QueryTxFilterLoopring, TokeBalanceResponse, Token, Transaction } from "../types";
/**
 * https://beta.loopring.io/#/
 * https://docs.loopring.io/en/dex_apis/
 * https://explorer.loopring.io/
 */
export declare class Loopring implements IChain {
    readonly chainConfig: IChainConfig;
    private tokens;
    constructor(chainConfig: IChainConfig);
    getLatestHeight(): Promise<number>;
    getTokenList(): Promise<Token[]>;
    getTokenInfo(idOrAddrsss: string | number): Promise<Token | undefined>;
    getConfirmations(hashOrHeight: HashOrBlockNumber): Promise<number>;
    calcConfirmations(targetHeight: number, latestHeight: number): Promise<number>;
    convertTxToEntity(data: any): Promise<Transaction | null>;
    getTransactionByHash(hash: string): Promise<Transaction | null>;
    private getAccountInfo;
    getTransactions(address: string, filter: Partial<QueryTxFilterLoopring>): Promise<QueryTransactionsResponse>;
    getTokenTransactions(address: string, tokenAddress: string | null, filter: Partial<QueryTxFilter>): Promise<QueryTransactionsResponse>;
    getBalance(address: string): Promise<BigNumber>;
    getBalances(address: string): Promise<TokeBalanceResponse[]>;
    getDecimals(): Promise<number>;
    getTokenBalance(address: string, tokenAddress: string): Promise<BigNumber>;
    getTokenDecimals(tokenAddress: string): Promise<number>;
    getTokenSymbol(tokenAddress: string): Promise<string>;
}
