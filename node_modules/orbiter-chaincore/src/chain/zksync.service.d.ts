import BigNumber from "bignumber.js";
import { HashOrBlockNumber, IChain, IChainConfig, ITransaction, QueryTransactionsResponse, QueryTxFilterZKSync, TokeBalanceResponse, Token, Transaction } from "../types";
/**
 * ZKSync 1.0
 * https://docs.zksync.io/apiv02-docs/
 */
export declare class ZKSync implements IChain {
    readonly chainConfig: IChainConfig;
    private tokens;
    constructor(chainConfig: IChainConfig);
    getLatestHeight(): Promise<number>;
    getTokenList(): Promise<Token[]>;
    getTokenInfo(idOrAddrsss: string | number): Promise<Token | undefined>;
    getConfirmations(_hashOrHeight: HashOrBlockNumber): Promise<number>;
    calcConfirmations(_targetHeight: number, _latestHeight: number): Promise<number>;
    convertTxToEntity(data: any): Promise<Transaction | null>;
    getTransactionByHash(hash: string): Promise<ITransaction | null>;
    getTransactions(address: string, filter?: Partial<QueryTxFilterZKSync>): Promise<QueryTransactionsResponse>;
    getTokenTransactions(address: string, tokenAddress: string, filter?: Partial<QueryTxFilterZKSync>): Promise<QueryTransactionsResponse>;
    getBalance(address: string): Promise<BigNumber>;
    getBalances(address: string): Promise<TokeBalanceResponse[]>;
    getDecimals(): Promise<number>;
    getTokenBalance(address: string, tokenAddress: string): Promise<BigNumber>;
    getTokenDecimals(tokenAddress: string): Promise<number>;
    getTokenSymbol(tokenAddress: string): Promise<string>;
}
